[{"categories":null,"content":"\rWarning\rsorry, the author is too lazy too translate…\r","date":"2022-09-25","objectID":"/en/go-overview/:0:0","series":null,"tags":null,"title":"Go Overview","uri":"/en/go-overview/#"},{"categories":null,"content":"\rWarning\rsorry, the author is too lazy too translate…\r","date":"2022-08-02","objectID":"/en/links/:0:0","series":null,"tags":null,"title":"Links","uri":"/en/links/#"},{"categories":null,"content":" sorry, the author is too lazy to translate… ","date":"2022-07-30","objectID":"/en/decorator-in-python/:0:0","series":null,"tags":null,"title":"Decorator in Python","uri":"/en/decorator-in-python/#"},{"categories":null,"content":" sorry, the author is too lazy to translate… ","date":"2022-07-30","objectID":"/en/go-web/:0:0","series":null,"tags":null,"title":"Go Web","uri":"/en/go-web/#"},{"categories":null,"content":" sorry, the author is too lazy to translate… ","date":"2022-07-30","objectID":"/en/go-request-responce/:0:0","series":null,"tags":null,"title":"Go Request Responce","uri":"/en/go-request-responce/#"},{"categories":["Python"],"content":"Python中的生成器和迭代器","date":"2022-07-29","objectID":"/en/generator-in-python/","series":null,"tags":["Python"],"title":"Generator in Python","uri":"/en/generator-in-python/"},{"categories":["Python"],"content":" sorry, the author is too lazy to translate… ","date":"2022-07-29","objectID":"/en/generator-in-python/:0:0","series":null,"tags":["Python"],"title":"Generator in Python","uri":"/en/generator-in-python/#"},{"categories":null,"content":" sorry, the author is too lazy to translate… ","date":"2022-07-29","objectID":"/en/rewrite-bot-with-aop-and-reflection/:0:0","series":null,"tags":null,"title":"rewrite my qq bot with aop and reflection","uri":"/en/rewrite-bot-with-aop-and-reflection/#"},{"categories":null,"content":"\r$ Before WriteWrite this article to record the practical experience of go concurrency ","date":"2022-07-29","objectID":"/en/go-concurrency/:1:0","series":null,"tags":["Go"],"title":"Go Concurrency","uri":"/en/go-concurrency/#-before-write"},{"categories":null,"content":"\r$ Content When deadlock occurs, consider whether the declared chan has been initialized with make Always send and receive values in chan in different goroutine, don’t try to send and receive values in main If chan is unbuffered, always first run a goroutine to send or receive values, then** in main (or other goroutine) to receive or send To send and receive values from chan in main at the same time, consider using a buffered channel Always consider the deadlock problem caused by two chans that send and receive each other (for example, two chans are sent to each other at the same time, and no one receives them at this time), you can put a send operation in a separate goroutine to solve Blocking of other goroutine will not affect the main goroutine at all ","date":"2022-07-29","objectID":"/en/go-concurrency/:1:1","series":null,"tags":["Go"],"title":"Go Concurrency","uri":"/en/go-concurrency/#-content"},{"categories":null,"content":" You are not connected to the Internet, only cached pages will be available. ","date":"0001-01-01","objectID":"/en/offline/:0:0","series":null,"tags":null,"title":"Offline","uri":"/en/offline/#"}]